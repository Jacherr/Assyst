/// <reference types="node" />
import { URL } from 'url';
import { HTTPHeadersInterface } from './constants';
import { Route } from './route';
export interface RequestFile {
    contentType?: string;
    data: any;
    filename?: string;
    name?: string;
}
export interface BasicRequestOptions {
    body?: any;
    files?: Array<RequestFile>;
    jsonify?: boolean;
    multipart?: boolean;
}
export interface RequestSettings {
    multipartJsonKey?: string;
    timeout?: number;
}
export interface RequestOptions extends BasicRequestOptions {
    headers?: HTTPHeadersInterface;
    method: string;
    route?: Route;
    settings: RequestSettings;
    url: URL;
}
export declare class Request {
    body: any;
    options: {
        headers: HTTPHeadersInterface;
        hostname: string;
        method: string;
        path: string;
        port: string;
        protocol: string;
    };
    route: Route | null;
    settings: RequestSettings;
    url: URL;
    constructor(options: RequestOptions);
    readonly method: string;
    readonly formatted: string;
    _createRequest(): Promise<{
        request: any;
        info: {
            alpn: string;
            connection?: any;
        };
    }>;
    send(): Promise<any>;
    toString(): string;
}
